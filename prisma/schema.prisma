generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String?
  email         String    @unique
  emailVerified DateTime?
  type          String
  provider      String
  refresh_token String?
  access_token  String?
  expires_at    Int?
  token_type    String?
  scope         String?
  id_token      String?
  session_state String?
  sessions      Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  account      Account  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Contact {
  accountId         String
  id                String        @id @default(cuid())
  firstName         String
  lastName          String?
  lastContacted     DateTime?
  active            Boolean       @default(true)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  contactGroupId    String?
  isFavorite        Boolean       @default(false)
  profileURL        String?
  birthday          DateTime?
  companyDepartment String?
  companyName       String?
  companyTitle      String?
  maidenName        String?
  middleName        String?
  nickName          String?
  notes             String?
  prefix            String?
  suffix            String?
  contactGroup      ContactGroup? @relation(fields: [contactGroupId], references: [id])
  Address           Address[]
  PhoneNumber       PhoneNumber[]
  Email             Email[]
  Social            Social[]
}

model ContactGroup {
  accountId        String
  id               String    @id @default(cuid())
  groupName        String
  contactFrequency BigInt
  color            String?
  contacts         Contact[]
}

model Address {
  id         String  @id @default(cuid())
  contactId  String
  label      String
  street1    String?
  street2    String?
  city       String?
  province   String?
  postalCode String?
  country    String?
  contact    Contact @relation(fields: [contactId], references: [id])
}

model PhoneNumber {
  id        String  @id @default(cuid())
  contactId String
  label     String
  phone     String?
  contact   Contact @relation(fields: [contactId], references: [id])
}

model Email {
  id        String  @id @default(cuid())
  contactId String
  label     String
  email     String?
  contact   Contact @relation(fields: [contactId], references: [id])
}

model Social {
  id        String  @id @default(cuid())
  contactId String
  label     String
  social    String?
  contact   Contact @relation(fields: [contactId], references: [id])
}
